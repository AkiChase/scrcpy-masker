name: Build windows

on:
  workflow_dispatch:

jobs:
  main:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            platform: windows
            
    steps:
      - name: Setup msys2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: UCRT64
          install: >-
            make
            diffutils
            gcc
            yasm
            pkg-config
              
      - name: Cache FFmpeg build
        id: ffmpeg-cache
        uses: actions/cache@v4
        with:
          path: ffmpeg-${{ matrix.platform }}
          key: ffmpeg-${{ matrix.platform }}-7.1.2-v0.1

      - name: Download and build FFmpeg (if not cached)
        if: steps.ffmpeg-cache.outputs.cache-hit != 'true'
        shell: msys2 {0}
        run: |
          OS=${{ matrix.platform }}
          
          curl -L -o ffmpeg-7.1.2.tar.bz2 https://ffmpeg.org/releases/ffmpeg-7.1.2.tar.bz2
          tar -xjf ffmpeg-7.1.2.tar.bz2
          rm ffmpeg-7.1.2.tar.bz2
          cd ffmpeg-7.1.2

          ./configure --prefix=./ffmpeg-$OS \
              --disable-avdevice --disable-postproc \
              --enable-decoder=h264 --enable-decoder=hevc --enable-decoder=av1 \
              --enable-swscale --enable-filter=scale --enable-avformat --enable-avcodec --enable-avutil --enable-swresample \
              --enable-gpl --disable-static --enable-shared
              
          make -j$(nproc)
          make install
          mv ffmpeg-$OS ../ffmpeg-$OS
    
      - name: Checkout codes
        uses: actions/checkout@v5.0.0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4.1.0
        with:
          version: latest
      - name: Setup Node.js
        uses: actions/setup-node@v5
      - name: Build frontend
        shell: pwsh
        run: |
          cd frontend
          pnpm install
          pnpm build
      
      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build scrcpy-mask
        run: |
          set -e
          
          SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
          OS=${{ matrix.platform }}
          PREFIX="ffmpeg-$OS"
          
          export FFMPEG_DIR="$SCRIPT_DIR/$PREFIX"
          export PKG_CONFIG_PATH="$FFMPEG_DIR/lib/pkgconfig"
          cargo build --release
        
          
      

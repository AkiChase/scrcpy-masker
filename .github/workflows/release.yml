name: Build scrcpy-mask (Windows)

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  windows:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            platform: windows-x64


name: Build scrcpy-mask (Windows)

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codes
        uses: actions/checkout@v5.0.0
      - name: Setup pnpm
        uses: pnpm/action-setup@v4.1.0
        with:
          version: latest
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          cache: 'pnpm'
          cache-dependency-path: frontend/pnpm-lock.yaml
      - name: Build frontend
        shell: bash
        run: |
          cd frontend
          pnpm install
          pnpm build
      - name: Upload frontend build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-web-assets
          path: assets/web

  windows:
    runs-on: ${{ matrix.os }}
    needs: build-frontend
    strategy:
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            platform: windows-x64
            
    steps:
      - name: Checkout codes
        uses: actions/checkout@v5.0.0

      # - name: Download frontend build artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: frontend-web-assets
      #     path: assets/web
      - name: Set up msvc
        uses: ilammy/msvc-dev-cmd@v1
      - name: Set up msys
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: MINGW64
          install: >-
            make
            diffutils
            yasm
            pkg-config
          path-type: inherit

      - name: Verify tools
        shell: msys2 {0}
        run: |
          cl.exe /?
          nasm -v
          perl -v
          make -v

      - name: Download and build FFmpeg (if not cached)
        if: steps.ffmpeg-cache.outputs.cache-hit != 'true'
        shell: msys2 {0}
        run: |
          OS=${{ matrix.platform }}
          
          curl -L -o FFmpeg-n7.1.2.tar.gz https://github.com/FFmpeg/FFmpeg/archive/refs/tags/n7.1.2.tar.gz
          tar -xzf FFmpeg-n7.1.2.tar.gz
          rm FFmpeg-n7.1.2.tar.gz
          mv FFmpeg-n7.1.2 ffmpeg-7.1.2
          cd ffmpeg-7.1.2

          ./configure --prefix=./ffmpeg-$OS \
              --disable-all --disable-doc --disable-iconv \
              --toolchain=msvc \
              --enable-decoder=h264 --enable-decoder=hevc --enable-decoder=av1 \
              --enable-swscale --enable-avformat --enable-avcodec --enable-avutil --enable-swresample \
              --enable-gpl --disable-static --enable-shared

          make -j$(nproc)
          make install
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          path: ffmpeg-7.1.2/ffmpeg-windows-x64
          name: ffmpeg-windows-x64
